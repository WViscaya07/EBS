/* 1) Variables de color personalizadas */
:root {
    --white-color: #ffffff;
    /* igual */
    --heading-color: #211e72;
    /* antes 191919 */
    --body-color: #18156c;
    /* antes 768385 */
    --accent-color: #e6a613;
    /* antes FFA415 */
    --orange-color: #e0175d;
    /* antes FF5528 */
    --border-color: #8D8D8D;
    /* igual, o ajústalo si quieres otro tono */
    --blue-color: #346DFF;
    /* opcional, deja o redéﬁnelo */
    --gray-color: #E7E7E7;
    /* igual */
    --gray2-color: #F1F6F7;
    /* igual */
    --heading-font: "Nunito Sans", sans-serif;
    --body-font: "Rubik", sans-serif;
    --ebs-white: #ffffff;
    /* blanco */
    --ebs-dark-primary: #211e72;
    /* azul índigo de tu logo */

}

/* 2) Branding del header en texto */
.cs_site_branding {
    color: var(--accent-color);
    font-weight: 700;
    text-decoration: none;
    transition: color 0.3s ease;
}

.cs_site_branding:hover {
    color: var(--ebs-white);
}


.cs_hero {
    position: relative;
    overflow: hidden;
}

.cs_hero::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    /* ajuste de opacidad */
    z-index: 1;
}

.cs_hero_content {
    position: relative;
    /* para que quede por encima del overlay */
    z-index: 2;
    color: #fff;
}

footer .cs_site_branding {
  color: #fff !important;
}

footer .cs_footer_widget_menu a:hover {
  color: #e0175d;
}

/*--------------------------------------------------
  Branding “EBS | Effective Business Solutions”
  — cuando el header pasa a azul —
---------------------------------------------------*/
/* Móvil (menu desplegado usa .cs_main_header.active para el fondo) */
/*--------------------------------------------------
  Branding “EBS…” en sticky y en menú móvil desplegado
---------------------------------------------------*/
@media screen and (max-width: 1279px) {

    /* 1) Estado sticky (cabecera azul cerrada) */
    .cs_site_header.cs_style_1.cs_gescout_sticky .cs_site_branding {
        color: #e6a613 !important;
    }

    .cs_site_header.cs_style_1.cs_gescout_sticky .cs_site_branding:hover {
        color: #ffffff !important;
    }

    /* 2) Estado menú móvil abierto */
    .cs_site_header.cs_style_1 .cs_main_header.active .cs_site_branding {
        color: #e6a613 !important;
    }

    .cs_site_header.cs_style_1 .cs_main_header.active .cs_site_branding:hover {
        color: #ffffff !important;
    }
}


/* Escritorio (sticky header usa .cs_gescout_sticky) */
@media screen and (min-width: 1280px) {
    .cs_site_header.cs_style_1.cs_gescout_sticky .cs_site_branding {
        /* texto dorado */
        color: #e6a613 !important;
    }

    .cs_site_header.cs_style_1.cs_gescout_sticky .cs_site_branding:hover {
        /* al hacer hover, blanco */
        color: #ffffff !important;
    }
}

/* Override para el fondo degradado en #services */
#services.cs_gray2_bg {
  /* gradient de rojo a azul (210°) */
  background: linear-gradient(210deg, #dd0000 0%, #003f9c 100%) !important;
}





/* carrusel */

/* Asegura que todas las cards tengan la misma altura y se centren */
.cs_slide {
  display: flex;
  justify-content: center;
}
.service-card {
  display: flex;
  flex-direction: column;
  height: 100%;
  background: #fff;
  overflow: hidden;
}

/* Miniatura: ocupa la parte superior */
.service-card .cs_card_thumbnail {
  flex: 0 0 auto;
  width: 100%;
}
.service-card .cs_card_thumbnail img {
  display: block;
  width: 100%;
  height: auto;
  object-fit: cover;
}

/* Cuerpo con fondo claro para contraste */
.service-card .cs_card_body {
  flex: 1 1 auto;
  padding: 1rem;
  background: rgba(255,255,255,0.95);
}
.service-card .cs_card_title {
  font-size: 1.25rem;      /* ajusta a tu gusto */
  color: #1a1a2e;          /* texto oscuro, mejor contraste */
}
.service-card .cs_card_subtitle {
  font-size: 0.95rem;
  color: #555;             /* gris suave */
}

/* Icono en esquina inferior derecha */
.service-card .cs_card_icon {
  position: absolute;
  bottom: 1rem;
  right: 1rem;
  width: 2rem;
  height: 2rem;
}
.service-card .cs_card_icon img {
  width: 100%;
  height: auto;
}

/* Ajustes responsivos si fuera necesario */
@media (max-width: 768px) {
  .service-card .cs_card_body {
    padding: .75rem;
  }
}

.cs_post .cs_post_thumbnail {
  position: relative !important;
  width: 100% !important;
  padding-top: 75% !important;
  overflow: hidden !important;
  flex-shrink: 0 !important;
}

.cs_post .cs_post_thumbnail img,
.cs_post .cs_post_thumbnail video {
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  width: 100% !important;
  height: 100% !important;
  object-fit: cover !important;
}



/* ===== Normalizar sólo en #clientes ===== */
section#clientes {

  /* 1) Asegurar que cada slide estire su tarjeta */
  .slick-slide {
    display: flex !important;
    align-items: stretch !important;
  }

  /* 2) La propia tarjeta como flex-column para forzar altura igual */
  .service-card.cs_card {
    display: flex !important;
    flex-direction: column !important;
    height: 100% !important;
  }

  /* 3) Miniatura con altura fija y overflow oculto */
  .service-card .cs_card_thumbnail {
    flex: 0 0 200px !important;     /* altura fija, ajústala */
    width: 100% !important;
    overflow: hidden !important;
    position: relative !important;
  }

  /* 4) Imagen/vídeo cubriendo todo el recuadro */
  .service-card .cs_card_thumbnail img,
  .service-card .cs_card_thumbnail video {
    width: 100% !important;
    height: 150% !important;
    object-fit: cover !important;
    object-position: center !important;
    display: block !important;
  }

  /* 5) Que el cuerpo de la tarjeta baje y quede siempre alineado */
  .service-card .cs_card_body {
    flex: 1 1 auto !important;
    display: flex !important;
    flex-direction: column !important;
    justify-content: center !important;
  }
}



/* ===== Normalizar sólo en Services (#services) ===== */
section#services {

  /* 1) Asegurar que cada slide estire su tarjeta */
  .slick-slide {
    display: flex !important;
    align-items: stretch !important;
  }

  /* 2) La propia tarjeta como flex-column para forzar altura igual */
  .service-card.cs_card {
    display: flex !important;
    flex-direction: column !important;
    height: 100% !important;
  }

  /* 3) Miniatura con altura fija y overflow oculto */
  .service-card .cs_card_thumbnail {
    flex: 0 0 200px !important;   /* ajusta este valor si quieres otra altura */
    width: 100% !important;
    overflow: hidden !important;
    position: relative !important;
  }

  /* 4) Imagen/vídeo cubriendo todo el recuadro */
  .service-card .cs_card_thumbnail img,
  .service-card .cs_card_thumbnail video {
    width: 100% !important;
    height: 150% !important;
    object-fit: cover !important;
    object-position: center !important;
    display: block !important;
  }

  /* 5) Que el cuerpo de la tarjeta baje y quede siempre alineado */
  .service-card .cs_card_body {
    flex: 1 1 auto !important;
    display: flex !important;
    flex-direction: column !important;
    justify-content: center !important;
  }
}
